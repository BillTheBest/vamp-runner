vamp.runner {

  api-url = "" # e.g. "http://localhost:8080/api/v1"
  timeout = 30 # api request timeout

  vamp-gateway-agent-host = "" # e.g ""127.0.0.1"

  recipes {

    interval = 3  # request interval for checking if something is running, e.g. deployed...
    timeout  = 60 #

    info {
      enabled = true
      reset-after = true
      description = "getting Vamp info"
    }

    http {
      enabled = true
      reset-after = true
      description = "single service HTTP deployment"
    }

    http-canary {
      enabled = true
      reset-after = true
      description = "single service HTTP deployment with an upgrade to new service version and removing the old one afterwards"

      throttle = true
      parallelism = 1
      request-count = 10
    }

    http-dependency {
      enabled = true
      reset-after = true
      description = "HTTP deployment with 2 services - one depends on another"
    }

    http-flip-flop {
      enabled = true
      reset-after = true
      description = "fliping back and forth between 2 defferent service versions"

      delete = true
      throttle = true
      parallelism = 1
      request-count = 10
    }

    http-flip-flop-dependency {
      enabled = true
      reset-after = true
      description = "fliping back and forth between 2 defferent services that also have one dependency each"

      delete = true
      throttle = true
      parallelism = 1
      request-count = 30
    }

    tcp {
      enabled = true
      reset-after = true
      description = "single service TCP deployment"
    }

    tcp-dependency {
      enabled = true
      reset-after = true
      description = "TCP deployment with 2 services - one depends on another"
    }

    route-weight {
      enabled = true
      reset-after = true
      description = "2 services with route weight 80% and 20%"

      throttle = false
      parallelism = 4
      request-count = 500

      deviation = 1 # percent
    }

    route-weight-filter-strength {
      enabled = true
      reset-after = true
      description = "2 services with route weight 60% and 40% and second with filter strength of 50%"

      throttle = false
      parallelism = 4
      request-count = 500

      deviation = 1 # percent
    }

    scale {
      enabled = true
      reset-after = true
      description = "changing number of instances (scale) from 1 to 3 and back"

      delete = true
      throttle = true
      parallelism = 1
      request-count = 10
    }
  }
}

akka {

  stdout-loglevel = "OFF"
  loglevel = "OFF"
  log-dead-letters = 0
  log-config-on-start = off
  log-dead-letters-during-shutdown = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  actor.default-mailbox.mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"

  default-dispatcher.fork-join-executor.pool-size-max = 32
  jvm-exit-on-fatal-error = false
}
