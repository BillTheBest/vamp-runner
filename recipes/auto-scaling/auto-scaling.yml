---
kind: breed
name: auto-scaling
deployable:
  type: application/javascript
  definition: |
    'use strict';

    let _ = require('highland');
    let vamp = require('vamp-node-client');

    let api = new vamp.Api();
    let http = new vamp.Http();
    let logger = new vamp.Log();
    let headers = {'Accept': 'application/json', 'Content-Type': 'application/json'};

    let scale = {
      instances: 1,
      cpu: 0.1,
      memory: '64MB'
    };

    let events = _(http.get(api.url + '/events?tag=gateways:sava/sava/port&tag=metrics:responseTime', {headers: headers}).then(JSON.parse));

    events.flatMap(_).head().each(function (response) {
      let responseTime = response.value;
      let current = scale.instances;

      if (responseTime > 1000 && scale.instances < 3)
        scale.instances++;
      else if (responseTime < 100 && scale.instances > 1) scale.instances--;

      logger.log(JSON.stringify(scale));

      if (current !== scale.instances) {
        http.request(api.url + '/deployments/sava/clusters/sava/services/runner/scale', {
          headers: headers,
          method: 'PUT'
        }, JSON.stringify(scale)).then(
          function () {
            api.event(['workflows:auto-scaling', 'scale'], scale.instances);
          });
      }
    });

---
kind: workflow
name: auto-scaling
breed: auto-scaling
schedule: daemon
environment_variables:
  VAMP_WORKFLOW_EXECUTION_PERIOD:  5
  VAMP_WORKFLOW_EXECUTION_TIMEOUT: 9