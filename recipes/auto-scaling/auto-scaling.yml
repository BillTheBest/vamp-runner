---
kind: breed
name: auto-scaling
deployable:
  type: application/javascript
  definition: |
    'use strict';

    var vamp = require('vamp-node-client');
    var _ = require('highland');
    var request = require('request-promise');

    var http = request.defaults({
      headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}
    });

    var api = new vamp.Api();

    var period = 5;
    var scale = {
      instances: 1,
      cpu: 0.1,
      memory: '64MB'
    };

    var process = function () {

      var events = _(http(api.url + '/events?tag=gateways:sava/sava/port&tag=metrics:responseTime').promise().then(JSON.parse));

      events.flatMap(_).head().each(function (response) {
        var responseTime = response.value;
        var current = scale.instances;

        if (responseTime > 1000 && scale.instances < 3)
          scale.instances++;
        else if (responseTime < 100 && scale.instances > 1) scale.instances--;

        console.log(JSON.stringify(scale));

        if (current !== scale.instances) {
          http({
            url: api.url + '/deployments/sava/clusters/sava/services/runner/scale',
            method: 'PUT',
            json: scale
          }, function (error) {
            if (!error) api.event(['workflows:auto-scaling', 'scale'], scale.instances);
          });
        }
      });
    };

    setInterval(process, period * 1000);

---
kind: workflow
name: auto-scaling
breed: auto-scaling
schedule: daemon